@page "/Cliente/Edit/{ClienteId:int}"
@inject TecnicoService tecnicoService
@inject ClientesServices clienteService
@inject CiudadeServices ciudadeService
@inject NavigationManager navigation
@rendermode InteractiveServer


<PageTitle>Editar Cliente</PageTitle>
<EditForm Model="clientes" OnvalidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Editar Cliente</h5>
            </div>

            <div class="card-body">
                @*Id*@
                <div class="mb-3">
                    <label class="form-label"><strong>ClienteId</strong></label>
                    <InputNumber class="form-control" @bind-Value="clientes.ClienteId" READONLY></InputNumber>
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label" for="nombres"><strong>Nombre</strong></label>
                    <InputText id="nombres" class="form-control" @bind-Value="clientes.Nombres"></InputText>
                    <ValidationMessage For="@(()=> clientes.Nombres)"></ValidationMessage>
                </div>

                @*Fecha*@
                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="clientes.FechaIngreso"></InputDate>
                    <ValidationMessage For="@(()=> clientes.FechaIngreso)"></ValidationMessage>
                </div>

                @*Direccion*@
                <div class="mb-3">
                    <label class="form-label"><strong>Dirrecion</strong></label>
                    <InputText class="form-control" @bind-Value="clientes.Direccion"></InputText>
                    <ValidationMessage For="@(()=> clientes.Direccion)"></ValidationMessage>
                </div>

                @*Ciudades*@
                <div class="mb-3">
                    <label class="form-label"><strong>Ciudad</strong></label>

                    <div class="input-group">

                        <InputSelect class="form-control form-select" @bind-Value="clientes.CiudadesId">
                            <option value="0" selected disabled>Elija una opción</option>
                            @foreach (var Ciudades in ciudades)
                            {
                                <option value="@Ciudades.CiudadesId">@Ciudades.Nombres</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=> clientes.ClienteId)"></ValidationMessage>

                    </div>
                </div>

                @*RNC*@
                <div class="mb-3">
                    <label class="form-label"><strong>RNC</strong></label>
                    <InputText class="form-control" @bind-Value="clientes.RNC"></InputText>
                    <ValidationMessage For="@(()=> clientes.RNC)"></ValidationMessage>
                </div>

                @*Limite de Credito*@
                <div class="mb-3">
                    <label class="form-label"><strong>Limite Credito</strong></label>
                    <InputNumber class="form-control" @bind-Value="clientes.LimiteCredito"></InputNumber>
                    <ValidationMessage For="@(()=> clientes.LimiteCredito)"></ValidationMessage>
                </div>

                @*Tecnico*@
                <div class="mb-3">
                    <label class="form-label"><strong>Tecnico</strong></label>

                    <div class="input-group">

                        <InputSelect class="form-control form-select" @bind-Value="clientes.TecnicoId">
                            <option value="0" selected disabled>Elija una opción</option>
                            @foreach (var Tecnico in tecnico)
                            {
                                <option value="@Tecnico.TecnicoId">@Tecnico.Nombres</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=> clientes.TecnicoId)"></ValidationMessage>

                    </div>
                </div>

            </div>
            @*footer*@
            <div class="card-footer text-center mt-3">
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <a type="button" href="/Cliente/Index/" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Volver </a>
            </div>
        </div>
    </div>

</EditForm>


@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes clientes { get; set; } = new Clientes();
    public List<Tecnicos> tecnico { get; set; } = new List<Tecnicos>();
    public List<Ciudades> ciudades { get; set; } = new List<Ciudades>();
    [Inject] protected ToastService ToastService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        if (ClienteId > 0)
        {
            clientes = await clienteService.Buscar(ClienteId);
            tecnico = await tecnicoService.Listar(t=> true);
            ciudades = await ciudadeService.Listar(t => true);
        }
    }

    public Edit(ToastService toastService)
    {
        ToastService = toastService;
    }

    public async Task Modificar()
    {
        if (!await Validar())
        {
            await clienteService.Guardar(clientes);
            ToastService.Notify(new(ToastType.Success, "Exito", $"Cliente Editado correctamente."));
            navigation.NavigateTo("/Cliente/Index");
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, "Error", $"Ya existe un cliente con ese nombre y rnc."));
        }
    }

    public async Task<bool> Validar()
    {
        var existeNombre = await clienteService.BuscarNombres(clientes.Nombres);
        var existeRnc = await clienteService.BuscarRNC(clientes.RNC);
        return existeNombre != null && existeRnc !=null;
    }

}


