@page "/Tickets/Create"
@inject TicketsServices ticketServices
@inject ClientesServices clienteServices
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<EditForm Model="Tickets" OnvalidSubmit="Crear">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Tickets</h5>
            </div>

            <div class="card-body">

                @*Id*@
                <div class="mb-3">
                    <label class="form-label"><strong>TicketId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tickets.TicketId" READONLY></InputNumber>
                </div>

                @*Fecha*@
                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Tickets.Fecha"></InputDate>
                    <ValidationMessage  For="@(()=> Tickets.TicketId)"></ValidationMessage>
                </div>

                @*Prioridad*@
                <div class="mb-3">
                    <label class="form-label"><strong>Prioridad</strong></label>
                    <InputText class="form-control" @bind-Value="Tickets.Prioridad"></InputText>
                    <ValidationMessage For="@(()=> Tickets.Prioridad)"></ValidationMessage>
                </div>

                @*Asuntos*@
                <div class="mb-3">
                    <label class="form-label"><strong>Asunto</strong></label>
                    <InputText class="form-control" @bind-Value="Tickets.Asunto"></InputText>
                    <ValidationMessage For="@(()=> Tickets.Asunto)"></ValidationMessage>
                </div>

                @*Depcripcion*@
                <div class="mb-3">
                    <label class="form-label"><strong>Descripcion</strong></label>
                    <InputText class="form-control" @bind-Value="Tickets.Descripcion"></InputText>
                    <ValidationMessage For="@(()=> Tickets.Descripcion)"></ValidationMessage>
                </div>
                
                @*Tiempo invertido*@
                <div class="mb-3">
                    <label class="form-label"><strong>Tiempo Invertido</strong></label>
                    <InputText class="form-control" @bind-Value="Tickets.TiempoInvertido"></InputText>
                    <ValidationMessage For="@(()=> Tickets.TiempoInvertido)"></ValidationMessage>
                </div>
                
                @*Cliente*@
                <div class="mb-3">
                    <label class="form-label"><strong>Cliente</strong></label>

                    <div class="input-group">

                        <InputSelect class="form-control form-select" @bind-Value="Tickets.ClienteId">
                            <option value="0" selected disabled>Elija una opción</option>
                            @foreach (var Cliente in clientes)
                            {
                                <option value="@Cliente.ClienteId">@Cliente.Nombres</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=> Tickets.ClienteId)"></ValidationMessage>
                    </div>
                </div>

                @*Tecnico*@
                <div class="mb-3">
                    <label class="form-label"><strong>Tecnico</strong></label>

                    <div class="input-group">

                        <InputSelect class="form-control form-select" @bind-Value="Tickets.ClienteId">
                            <option value="0" selected disabled>Elija una opción</option>
                            @foreach (var Tecnico in tecnico)
                            {
                                <option value="@Tecnico.TecnicoId">@Tecnico.Nombres</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=> Tickets.ClienteId)"></ValidationMessage>
                    </div>
                </div>
            </div>
            @*footer*@
            <div class="card-footer text-center mt-3">
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <a type="button" href="/Tickets/Index/" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Volver </a>
            </div>
        </div>
    </div>

</EditForm>

@code {
    public Tickets Tickets { get; set; } = new Tickets();
    public List<Tecnicos> tecnico { get; set; } = new List<Tecnicos>();
    public List<Clientes> clientes { get; set; } = new List<Clientes>();
    [Inject] protected ToastService ToastService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        tecnico = await tecnicoService.Listar(t => true);
        clientes = await clienteServices.Listar(t => true);
    }

    public Create(ToastService toastService)
    {
        ToastService = toastService;
    }

    public async Task Crear()
    {
        if (Tickets.TicketId == 0)
        {
            await ticketServices.Guardar(Tickets);
            ToastService.Notify(new(ToastType.Success, "Exito", $"Ticket Creado correctamente."));
            Tickets = new Tickets();
            navigation.NavigateTo("/Tickets/Index");
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, "Error", $"al crear Ticket."));
        }
    }

    public void Nuevo()
    {
        Tickets = new Tickets();
    }

}
